name: CI Front-End

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install system dependencies for Puppeteer
      run: |
        sudo apt-get update
        sudo apt-get install -y libgbm-dev libasound2 libatk1.0-0 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libnss3 lsb-release xdg-utils

    - name: Install dependencies
      run: npm install --legacy-peer-deps

    - name: Install additional dependencies
      run: npm install cross-env puppeteer --legacy-peer-deps --save-dev

    - name: Create .env file for build
      run: |
        echo "REACT_APP_SKIP_PRERENDERING=true" > .env

    - name: Build React app with fallback
      run: |
        # Try to build normally first
        npm run build || (
          # If it fails, try building with a workaround to skip react-snap
          echo "Regular build failed, trying with fallback..."
          export CI=false
          export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
          NODE_OPTIONS=--max_old_space_size=4096 npm run build
        )
      env:
        NODE_ENV: production
        PUPPETEER_ARGS: "--no-sandbox --disable-setuid-sandbox --disable-dev-shm-usage"
        PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true

    - name: Deploy via FTP
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: choucas.o2switch.net
        username: rame5605
        password: ${{ secrets.FTP_PASSWORD }}
        protocol: ftp
        port: 21
        local-dir: ./build/
        server-dir: /testfront.fr/
        state-name: .ftp-deploy-sync-state.json
        dangerous-clean-slate: false
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          .gitignore
          README.md
          .env.local
          .env.development
          .env.test
          .env.production
          yarn.lock
          package-lock.json
          .DS_Store
          .editorconfig
          .ftp-deploy-sync-state.json
        log-level: verbose