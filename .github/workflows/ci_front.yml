name: CI Front-End

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install critical Chrome dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libatk1.0-0 \
          libcairo2 \
          libcups2 \
          libdbus-1-3 \
          libexpat1 \
          libfontconfig1 \
          libgdk-pixbuf2.0-0 \
          libglib2.0-0 \
          libgtk-3-0 \
          libnspr4 \
          libpango-1.0-0 \
          libx11-6 \
          libx11-xcb1 \
          libxcb1 \
          libxcomposite1 \
          libxdamage1 \
          libxext6 \
          libxfixes3 \
          libxi6 \
          libxrandr2 \
          libxrender1 \
          libxss1 \
          libxtst6 \
          ca-certificates \
          fonts-liberation \
          libnss3

    - name: Install dependencies
      run: npm install --legacy-peer-deps

    - name: Install additional dependencies
      run: npm install cross-env --legacy-peer-deps --save-dev

    - name: Create build script override
      run: |
        # Create a temporary file that will modify the build process
        cat > skip-react-snap.js << 'EOF'
        const fs = require('fs');
        const path = require('path');

        // Try to find package.json
        const packageJsonPath = path.resolve('./package.json');
        if (fs.existsSync(packageJsonPath)) {
          const packageJson = JSON.parse(fs.readFileSync(packageJsonPath, 'utf8'));
          
          // Temporarily remove postbuild script if it exists
          if (packageJson.scripts && packageJson.scripts.postbuild) {
            console.log('Temporarily removing postbuild script (react-snap)');
            delete packageJson.scripts.postbuild;
            fs.writeFileSync(packageJsonPath, JSON.stringify(packageJson, null, 2));
            console.log('Successfully modified package.json');
          }
        }
        EOF
        node skip-react-snap.js

    - name: Build React app
      run: |
        export CI=false
        NODE_OPTIONS=--max_old_space_size=4096 npm run build
      env:
        NODE_ENV: production

    - name: Deploy via FTP
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: choucas.o2switch.net
        username: rame5605
        password: ${{ secrets.FTP_PASSWORD }}
        protocol: ftp
        port: 21
        local-dir: ./build/
        server-dir: /testfront.fr/
        state-name: .ftp-deploy-sync-state.json
        dangerous-clean-slate: false
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          .gitignore
          README.md
          .env.local
          .env.development
          .env.test
          .env.production
          yarn.lock
          package-lock.json
          .DS_Store
          .editorconfig
          .ftp-deploy-sync-state.json
        log-level: verbose